// This file was generated by counterfeiter
package apifakes

import (
	"sync"

	"github.com/cloudfoundry/cli/cf/api"
	"github.com/cloudfoundry/cli/cf/models"
)

type FakeBuildpackBitsRepository struct {
	UploadBuildpackStub        func(buildpack models.Buildpack, dir string) (apiErr error)
	uploadBuildpackMutex       sync.RWMutex
	uploadBuildpackArgsForCall []struct {
		buildpack models.Buildpack
		dir       string
	}
	uploadBuildpackReturns struct {
		result1 error
	}
}

func (fake *FakeBuildpackBitsRepository) UploadBuildpack(buildpack models.Buildpack, dir string) (apiErr error) {
	fake.uploadBuildpackMutex.Lock()
	fake.uploadBuildpackArgsForCall = append(fake.uploadBuildpackArgsForCall, struct {
		buildpack models.Buildpack
		dir       string
	}{buildpack, dir})
	fake.uploadBuildpackMutex.Unlock()
	if fake.UploadBuildpackStub != nil {
		return fake.UploadBuildpackStub(buildpack, dir)
	} else {
		return fake.uploadBuildpackReturns.result1
	}
}

func (fake *FakeBuildpackBitsRepository) UploadBuildpackCallCount() int {
	fake.uploadBuildpackMutex.RLock()
	defer fake.uploadBuildpackMutex.RUnlock()
	return len(fake.uploadBuildpackArgsForCall)
}

func (fake *FakeBuildpackBitsRepository) UploadBuildpackArgsForCall(i int) (models.Buildpack, string) {
	fake.uploadBuildpackMutex.RLock()
	defer fake.uploadBuildpackMutex.RUnlock()
	return fake.uploadBuildpackArgsForCall[i].buildpack, fake.uploadBuildpackArgsForCall[i].dir
}

func (fake *FakeBuildpackBitsRepository) UploadBuildpackReturns(result1 error) {
	fake.UploadBuildpackStub = nil
	fake.uploadBuildpackReturns = struct {
		result1 error
	}{result1}
}

var _ api.BuildpackBitsRepository = new(FakeBuildpackBitsRepository)
