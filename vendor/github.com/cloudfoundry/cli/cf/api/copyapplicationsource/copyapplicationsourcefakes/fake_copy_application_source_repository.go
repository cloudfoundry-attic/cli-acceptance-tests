// This file was generated by counterfeiter
package copyapplicationsourcefakes

import (
	"sync"

	"github.com/cloudfoundry/cli/cf/api/copyapplicationsource"
)

type FakeCopyApplicationSourceRepository struct {
	CopyApplicationStub        func(sourceAppGUID, targetAppGUID string) error
	copyApplicationMutex       sync.RWMutex
	copyApplicationArgsForCall []struct {
		sourceAppGUID string
		targetAppGUID string
	}
	copyApplicationReturns struct {
		result1 error
	}
}

func (fake *FakeCopyApplicationSourceRepository) CopyApplication(sourceAppGUID string, targetAppGUID string) error {
	fake.copyApplicationMutex.Lock()
	fake.copyApplicationArgsForCall = append(fake.copyApplicationArgsForCall, struct {
		sourceAppGUID string
		targetAppGUID string
	}{sourceAppGUID, targetAppGUID})
	fake.copyApplicationMutex.Unlock()
	if fake.CopyApplicationStub != nil {
		return fake.CopyApplicationStub(sourceAppGUID, targetAppGUID)
	} else {
		return fake.copyApplicationReturns.result1
	}
}

func (fake *FakeCopyApplicationSourceRepository) CopyApplicationCallCount() int {
	fake.copyApplicationMutex.RLock()
	defer fake.copyApplicationMutex.RUnlock()
	return len(fake.copyApplicationArgsForCall)
}

func (fake *FakeCopyApplicationSourceRepository) CopyApplicationArgsForCall(i int) (string, string) {
	fake.copyApplicationMutex.RLock()
	defer fake.copyApplicationMutex.RUnlock()
	return fake.copyApplicationArgsForCall[i].sourceAppGUID, fake.copyApplicationArgsForCall[i].targetAppGUID
}

func (fake *FakeCopyApplicationSourceRepository) CopyApplicationReturns(result1 error) {
	fake.CopyApplicationStub = nil
	fake.copyApplicationReturns = struct {
		result1 error
	}{result1}
}

var _ copyapplicationsource.CopyApplicationSourceRepository = new(FakeCopyApplicationSourceRepository)
